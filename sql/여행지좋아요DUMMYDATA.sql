SELECT TRAVEL_NO, RECOMMEND_TYPE, PURPOSE, C.CATEGORY, TRAVEL_NAME, TRAVEL_ADDRESS, ACTIVITY_YN, TRAVEL_PRICE, ANIMAL_YN, TRAVEL_INFO, TRAVEL_PHONE, OPEN, CLOSED, CLOSED_DAY, LIKE_CNT
FROM TRAVEL T JOIN CATEGORY C ON T.CATEGORY = C.NO JOIN PURPOSE P ON T.THEME = P.NO 
WHERE TRAVEL_NO = 33
ORDER BY TRAVEL_NO;

-- 좋아요 +1 해주는 구문
UPDATE TRAVEL SET LIKE_CNT =  LIKE_CNT + 1 WHERE TRAVEL_NO = ? ;

UPDATE TRAVEL SET like_cnt = 34 WHERE TRAVEL_NO= 1;

-- 설문조사 관련 구문
SELECT *
FROM TRAVEL;

-- 설문번호 , 회원넘버, 목적 1 2 , 지역, 인원, 예산, 반려동물유무
SELECT TRAVEL_NO, G.PERSON_GROUP ,P.PURPOSE, C.CATEGORY, TRAVEL_NAME, TRAVEL_ADDRESS, TRAVEL_PRICE
FROM TRAVEL T 
JOIN CATEGORY C ON T.CATEGORY = C.NO 
JOIN PURPOSE P ON T.THEME = P.NO 
JOIN PERSON_GROUP G ON T.RECOMMEND_TYPE = G.NO
JOIN SURVEY S ON P.NO = S.PURPOSE;
--WHERE P.PURPOSE = '식도락'
--AND C.CATEGORY = '맛집'
--AND TRAVEL_ADDRESS LIKE '%제주시%'
--AND TRAVEL_PRICE > 5000
;

SELECT SURVEY_NO ,MEMBER_NO, P.PURPOSE, PURPOSE2, L.LOCATION ,G.PERSON_GROUP, BUDGET ,ANIMAL_YN, SURVEY_DATE
FROM SURVEY S
JOIN PURPOSE P ON S.PURPOSE = P.NO
JOIN PURPOSE P ON S.PURPOSE2 = P.NO 
JOIN LOCATION L ON S.LOCATION = L.NO
JOIN PERSON_GROUP G ON S.PERSON_GROUP = G.NO
;

SELECT TRAVEL_NO, P.PURPOSE, C.CATEGORY, TRAVEL_NAME, TRAVEL_ADDRESS 
FROM TRAVEL T 
JOIN CATEGORY C ON T.CATEGORY = C.NO 
JOIN PURPOSE P ON T.THEME = P.NO
JOIN SURVEY S ON T.THEME = S.PURPOSE
JOIN PURPOSE P ON S.PURPOSE = P.NO
JOIN LOCATION L ON S.LOCATION = L.NO
WHERE S.PURPOSE IN (4,1)
AND S.LOCATION = 1
;
-- 1. 제주시 ACCOM DAO 
SELECT *
FROM TRAVEL
WHERE 
-- 예산 평균 낸 구문
AND TRAVEL_PRICE <= 
(SELECT AVG (NVL(TRAVEL_PRICE,0)) 
FROM TRAVEL)
ORDER BY TRAVEL_PRICE
;

AND ROOM_PRICE (SELECT AVG(ROOM_PRICE) FROM ROOM WHERE CAPACITY >= " 
+ inputDto.getPeople() + "AND CAPACITY <= " + inputDto.getPeople()+1 ;

